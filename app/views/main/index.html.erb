<div class="container-fluid">
  <div id="profile">
    <span>GD</span>
    <div id="profileBox">
      <p>Hello. I'm Gloria. ðŸ˜€</p>
      <p>A junior web developer in Vancouver, Canada.</p>
      <a href="https://www.linkedin.com/in/gloriading/"
         target="_blank"
         class="btn btn-light btn-block btn-profile">Linkedin</a>
      <a href="https://github.com/gloriading"
         target="_blank"
         class="btn btn-light btn-block btn-profile">Github</a>
    </div>
  </div>
  <h1 id="header">Stopwatch</h1>

  <div id="watchArea">
    <h1 id="timer" class="display-3">
      00 : 00. 000
    </h1>
    <div id="controls">
      <button class="btn btn-dark" id="toggle">
        START
      </button>
      <button class="btn btn-dark" id="lap">
        LAP
      </button>
      <button class="btn btn-dark" id="reset">
        RESET
      </button>
    </div>
  </div>
  <div id="lapReport"></div>
</div>

<script type="text/javascript">
let laptime, lapcount = 0, firstClickOnStart = true;
let startTime, endTime;
let lapClick = [];

function timeFormatter(timeInMilliSeconds) {
  let time = new Date(timeInMilliSeconds);
  let minutes = time.getMinutes().toString();
  let seconds = time.getSeconds().toString();
  let milliseconds = time.getMilliseconds().toString();

  if( minutes.length < 2 ) {
    minutes = "0" + minutes;
  }
  if( seconds.length < 2 ) {
    seconds = "0" + seconds;
  }
  while( milliseconds.length < 3 ) {
    milliseconds = "0" + milliseconds;
  }

  return minutes + " : " + seconds + ". " + milliseconds;
}

function stopWatch(ele){
  let currentTime = 0;
  let interval;
  let offset;

  function update() {
    if(this.isOn){
      currentTime += delta();
    }
    let formattedTime = timeFormatter(currentTime);
    ele.textContent = formattedTime;
    laptime = formattedTime;
  }

  function delta() {
    const now = Date.now();
    const timePassed = now - offset;
    offset = now;
    return timePassed;
  }

  this.isOn = false;
  this.start = function() {
    if(!this.isOn) {
      interval = setInterval( update.bind(this), 10 );
      offset = Date.now();
      this.isOn = true;
    }
  }

  this.stop = function() {
    if(this.isOn) {
      clearInterval(interval);
      interval = null;
      this.isOn = false;
    }
  }

  this.reset = function(){
    if(!this.isOn){
      currentTime = 0;
      update();
      lapReport.innerText = "";
      laptime = null;
      lapcount = 0;
      firstClickOnStart = true;
      startTime = null;
      endTime = null;
      lapClick = [];
    }
  }

}

const timer = document.getElementById('timer');
const toggleBtn = document.getElementById('toggle');
const resetBtn = document.getElementById('reset');
const lapBtn = document.getElementById('lap');
const lapReport = document.getElementById('lapReport');


const watch = new stopWatch(timer);


toggleBtn.addEventListener('click', function(){
  if(watch.isOn){
    watch.stop();
    resetBtn.style.display = 'inline-block';
    lapBtn.style.display = 'none';
    toggleBtn.textContent = 'Start';
  }else{
    if(firstClickOnStart){
      startTime = timeFormatter(Date.now());
      firstClickOnStart = false;
    }
    watch.start();
    resetBtn.style.display = 'none';
    lapBtn.style.display = 'inline-block';
    toggleBtn.textContent = 'Stop';
  }
});

resetBtn.addEventListener('click', function(){
  endTime = timeFormatter(Date.now());
 records.create({start_time: startTime, end_time: endTime})
        .then(newRecord => {
         console.log(newRecord);
         if(lapClick.length > 0){
           for(let elem of lapClick){
             laps.create({lap_time: elem, record: newRecord})
                 .then(result => {
                   console.log(result);
                 })
           }
         }
        })
  setTimeout(function(){
      watch.reset();
  },100);
  resetBtn.style.display = 'none';
  lapBtn.style.display = 'none';
});

lapBtn.addEventListener('click', function(){
  if(watch.isOn){
    let tempLap = timeFormatter(Date.now());
    lapClick.push(tempLap);
    lapcount ++;
    if(lapcount < 10){ lapcount = '0' + lapcount };
    const newLapTime = document.createElement('p');
    const lapTimeTitle = `[Lap ${lapcount}]`;
    newLapTime.innerText = `${lapTimeTitle} ${laptime}`;
    lapReport.appendChild(newLapTime);
  }

});

</script>
